@page
@model ThePersonalBudgetApp.Pages.WorkOnBudgetModel
@{
    await Model.OnGetAsync();
}

@if (!Model.IsWorkingOnBudget)
{
    <h3>Choose Budget to work with:</h3>
    <ul>
        @foreach (var budget in Model.Budgets)
        {
            <li>
                <form method="post">
                    <input type="hidden" name="selectedBudgetId" value="@budget.Id" />
                    <button type="submit" class="btn btn-link">@budget.Title</button>
                </form>
            </li>
        }
    </ul>

    <h5>Eller välj att <a asp-page="/CreateBudget">SKAPA NY BUDGET</a></h5>
}
else
{
    <!--Work on Selected Budget-->
    @if (Model.SelectedBudget is not null)
    {
        <form method="post" name="SelectedBudget">
            <div>
                <label>Title:</label>
                <input asp-for="SelectedBudget!.Title" />
            </div>
            <div>
                <label>Description:</label>
                <textarea asp-for="SelectedBudget!.Description"></textarea>
            </div>

            <h2>Incomes</h2>
            <div id="incomes-container">
                @for (int i = 0; i < Model.SelectedBudget.Incomes.Count; i++)
                {
                    <div>
                        <input asp-for="SelectedBudget!.Incomes[i].Name" placeholder="Category Name" />
                        <button type="button" onclick="removeCategory('income', @i)">Remove</button>
                        <ul id="income-items-@i">
                            @for (int j = 0; j < Model.SelectedBudget.Incomes[i].Items.Count; j++)
                            {
                                <li>
                                    <input asp-for="SelectedBudget!.Incomes[i].Items[j].Name" placeholder="Item Name" />
                                    <input asp-for="SelectedBudget!.Incomes[i].Items[j].Amount" placeholder="Amount" />
                                    <button type="button" onclick="removeItem('income', @i, @j)">Remove</button>
                                </li>
                            }
                        </ul>
                        <button type="button" onclick="addItem('income', @i)">Add Item</button>
                    </div>
                }
            </div>
            <button type="button" onclick="addCategory('income')">Add Income Category</button>

            <h2>Expenses</h2>
            <div id="expenses-container">
                @for (int i = 0; i < Model.SelectedBudget.Expenses.Count; i++)
                {
                    <div>
                        <input asp-for="SelectedBudget!.Expenses[i].Name" placeholder="Category Name" />
                        <button type="button" onclick="removeCategory('expense', @i)">Remove</button>
                        <ul id="expense-items-@i">
                            @for (int j = 0; j < Model.SelectedBudget.Expenses[i].Items.Count; j++)
                            {
                                <li>
                                    <input asp-for="SelectedBudget!.Expenses[i].Items[j].Name" placeholder="Item Name" />
                                    <input asp-for="SelectedBudget!.Expenses[i].Items[j].Amount" placeholder="Amount" />
                                    <button type="button" onclick="removeItem('expense', @i, @j)">Remove</button>
                                </li>
                            }
                        </ul>
                        <button type="button" onclick="addItem('expense', @i)">Add Item</button>
                    </div>
                }
            </div>
            <button type="button" onclick="addCategory('expense')">Add Expense Category</button>

            <button type="submit">Save Budget</button>
        </form>
    }
    else
    {
        <h1>Something went wrong...</h1>
    }

<!-- return to list of budgets -->
<form method="post">
    <input type="hidden" name="action" value="back" />
    <button type="submit" class="btn btn-secondary">Back to budget list</button>
</form>
}

<!-- TODO: Display total (or chart) and Add calculator here -->